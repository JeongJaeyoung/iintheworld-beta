user nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" "$request_uri" "$uri"'
                      '"$http_user_agent" "$http_x_forwarded_for"';    
    access_log  /var/log/nginx/access.log  main;
    sendfile on;
    keepalive_timeout 65;

    upstream frontend_react{
      server frontend_react:3000;
    }

    upstream backend_django_gunicorn {
      server backend_django_gunicorn:8000;
    }


    server {
        listen 80;
        server_name  iintheworld-beta.com  www.iintheworld-beta.com;

        location ~ /.well-known/acme-challenge {
                allow all;
                root /usr/share/nginx/html;
                try_files $uri =404;
        }

        location / {
                return 301 https://$host$request_uri;
        } 

        # location / {
        #         allow all;
        #         root /usr/share/nginx/html;
        #         try_files $uri =404;
        # }

    }

    server {
        listen 443 ssl;
        listen [::]:443;
        server_name iintheworld-beta.com www.iintheworld-beta.com;
        client_max_body_size 20M;

        ssl_certificate /etc/letsencrypt/live/iintheworld-beta.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/iintheworld-beta.com/privkey.pem;
        # include /etc/letsencrypt/options-ssl-nginx.conf; 
        # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


        location / {
          proxy_pass http://frontend_react;
          proxy_redirect     off;                     # 서버 응답 헤더의 주소 변경 (불필요)
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
	        proxy_set_header   X-Forwarded-Proto $scheme;
        }

        location /backend/admin {
          # urls.py에서 /admin이 정의되어 있어야
          # rewrite ^/backend(/admin/.*)$ $1 break;  # backend 제거
          proxy_pass http://backend_django_gunicorn;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $host;
          proxy_redirect off;
        }

        location /backend/accounts {
          # rewrite ^/backend(/accounts/.*)$ $1 break;  # backend 제거
          proxy_pass http://backend_django_gunicorn;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $host;
          proxy_redirect off;
        }

        location /backend/iintheworld {
          # rewrite ^/backend(/iintheworld/.*)$ $1 break;  # backend 제거
          proxy_pass http://backend_django_gunicorn;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $host;
          proxy_redirect off;
        }

        location /backend/board {
          # rewrite ^/backend(/board/.*)$ $1 break;  # backend 제거
          proxy_pass http://backend_django_gunicorn;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $host;
          proxy_redirect off;
        }

        location /backend/mall {
          # rewrite ^/backend(/mall/.*)$ $1 break;  # backend 제거
          proxy_pass http://backend_django_gunicorn;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $host;
          proxy_redirect off;
        }

        location /swagger {
          # rewrite ^/backend(/mall/.*)$ $1 break;  # backend 제거
          proxy_pass http://backend_django_gunicorn;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $host;
          proxy_redirect off;
        }

        location /staticfiles/ {
          alias /app/staticfiles/;
        }

        location /mediafiles/ {
          alias /app/mediafiles/;
        }
    }
}