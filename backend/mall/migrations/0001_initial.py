# Generated by Django 4.2.4 on 2023-12-11 05:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': '1. Category 상품 분류',
                'verbose_name_plural': '1. Category 상품 분류',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('total_amount', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('requested', '주문요청'), ('failed_payment', '결제실패'), ('paid', '결제완료'), ('prepared_product', '상품준비중'), ('cancelled', '주문취소')], db_index=True, default='requested', max_length=20)),
            ],
            options={
                'verbose_name': '4. Order 주문',
                'verbose_name_plural': '4. Order 주문',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
            options={
                'verbose_name': '태그',
                'verbose_name_plural': '태그',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('name_en', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('a', '정상'), ('s', '품절'), ('o', '단종'), ('i', '비활성화')], default='a', max_length=1)),
                ('photo', models.ImageField(upload_to='mall/product/photo/%Y/%m/%d')),
                ('price', models.PositiveIntegerField()),
                ('description', models.TextField(blank=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mall.category')),
                ('tag', models.ManyToManyField(blank=True, to='mall.tag')),
            ],
            options={
                'verbose_name': '2. Product 상품',
                'verbose_name_plural': '2. Product 상품',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta', models.JSONField(default=dict, editable=False, verbose_name='포트원 결제내역')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=200)),
                ('desired_amount', models.PositiveIntegerField(editable=False)),
                ('buyer_name', models.CharField(editable=False, max_length=100)),
                ('buyer_email', models.EmailField(editable=False, max_length=254)),
                ('pay_method', models.CharField(choices=[('card', '체크카드/신용카드')], default='card', max_length=20)),
                ('pay_status', models.CharField(choices=[('ready', '결제 준비'), ('paid', '결제 완료'), ('cancelled', '결제 취소'), ('failed', '결제 실패')], default='ready', max_length=20)),
                ('is_paid_ok', models.BooleanField(db_index=True, default=False, editable=False)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mall.order')),
            ],
            options={
                'verbose_name': '6. OrderPayment 결제내역',
                'verbose_name_plural': '6. OrderPayment 결제내역',
            },
        ),
        migrations.CreateModel(
            name='OrderedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='주문 시점의 상품명을 저장합니다.', max_length=50, verbose_name='상품명')),
                ('price', models.PositiveIntegerField(help_text='주문 시점의 상품가격을 저장합니다.', verbose_name='상품가격')),
                ('quantity', models.PositiveIntegerField(verbose_name='상품수량')),
                ('order', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='mall.order')),
                ('product', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='mall.product')),
            ],
            options={
                'verbose_name': '5. OrderedProduct 주문상품',
                'verbose_name_plural': '5. OrderedProduct 주문상품',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='product_set',
            field=models.ManyToManyField(through='mall.OrderedProduct', to='mall.product'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1)])),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mall.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_product_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '3. CartProduct 수강바구니 상품',
                'verbose_name_plural': '3. CartProduct 수강바구니 상품',
            },
        ),
        migrations.AddConstraint(
            model_name='cartproduct',
            constraint=models.UniqueConstraint(fields=('user', 'product'), name='unique_user_product'),
        ),
    ]
